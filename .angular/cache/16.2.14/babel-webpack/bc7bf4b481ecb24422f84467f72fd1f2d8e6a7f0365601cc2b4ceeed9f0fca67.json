{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    const token = localStorage.getItem(\"token\");\n    const tokenType = 'Bearer';\n    if (!token) return next.handle(request);\n    request = request.clone({\n      headers: request.headers.set('authorization', `${token}`)\n    });\n    return next.handle(request);\n  }\n  static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthInterceptor","constructor","intercept","request","next","token","localStorage","getItem","tokenType","handle","clone","headers","set","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/yluto4ka/Documents/AngularProjects/Frelance/front/src/app/core/services/auth.interceptor.ts"],"sourcesContent":["import { HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor() { }\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n    const token = localStorage.getItem(\"token\");\n    const tokenType = 'Bearer';\n\n    if (!token) return next.handle(request);\n\n    request = request.clone({\n      headers: request.headers.set('authorization', `${token}`),\n    });\n\n    return next.handle(request);\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,eAAe;EAE1BC,YAAA,GAAgB;EAChBC,SAASA,CAACC,OAAyB,EAAEC,IAAiB;IACpD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,SAAS,GAAG,QAAQ;IAE1B,IAAI,CAACH,KAAK,EAAE,OAAOD,IAAI,CAACK,MAAM,CAACN,OAAO,CAAC;IAEvCA,OAAO,GAAGA,OAAO,CAACO,KAAK,CAAC;MACtBC,OAAO,EAAER,OAAO,CAACQ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,GAAGP,KAAK,EAAE;KACzD,CAAC;IAEF,OAAOD,IAAI,CAACK,MAAM,CAACN,OAAO,CAAC;EAC7B;EAAC,QAAAU,CAAA,G;qBAdUb,eAAe;EAAA;EAAA,QAAAc,EAAA,G;WAAfd,eAAe;IAAAe,OAAA,EAAff,eAAe,CAAAgB,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}